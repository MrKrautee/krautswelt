# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-12-27 13:33
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contents', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='slug')),
                ('pub_date', models.DateTimeField(verbose_name='publication date')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('is_featured', models.BooleanField(default=False, verbose_name='is featured')),
                ('is_active', models.BooleanField(default=False, verbose_name='is active')),
            ],
        ),
        migrations.CreateModel(
            name='BlogEntryImageContent',
            fields=[
                ('imagecontent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='contents.ImageContent')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_blogentryimagecontent_set', to='blog.BlogEntry')),
            ],
            options={
                'verbose_name': 'image',
                'verbose_name_plural': 'images',
                'ordering': ['ordering'],
            },
            bases=('contents.imagecontent',),
        ),
        migrations.CreateModel(
            name='BlogEntryRichTextContent',
            fields=[
                ('richtextcontent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='contents.RichTextContent')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_blogentryrichtextcontent_set', to='blog.BlogEntry')),
            ],
            options={
                'verbose_name': 'rich text',
                'verbose_name_plural': 'rich texts',
                'ordering': ['ordering'],
            },
            bases=('contents.richtextcontent',),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='slug')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Your name will be published.', max_length=100, verbose_name='name')),
                ('email', models.EmailField(help_text='Your email will never shown to anyone else', max_length=254, verbose_name='email')),
                ('website', models.URLField(blank=True, verbose_name='website')),
                ('comment', models.TextField(verbose_name='comment')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='date')),
                ('is_active', models.BooleanField(default=False, verbose_name='id active')),
                ('notify_new_comment', models.BooleanField(default=False, verbose_name='notify me for new comments')),
                ('notify_new_entry', models.BooleanField(default=False, verbose_name='notify me for new blog entries')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.BlogEntry')),
            ],
        ),
        migrations.AddField(
            model_name='blogentry',
            name='categories',
            field=models.ManyToManyField(blank=True, related_name='blogentries', to='blog.Category', verbose_name='categories'),
        ),
        migrations.AddField(
            model_name='blogentry',
            name='related_entries',
            field=models.ManyToManyField(blank=True, related_name='_blogentry_related_entries_+', to='blog.BlogEntry'),
        ),
    ]
